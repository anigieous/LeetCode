/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* bst(vector<int>& nums, int low, int high)
    {
        int n=high-low;
        if(n==0)
            return NULL;
        int mid=low+(high-low)/2; 
        TreeNode* root= new TreeNode(nums[mid]);
        root->left=bst(nums,low,mid);
        root->right=bst(nums,mid+1,high);
        return root;
    }
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        int n=nums.size();
        return bst(nums,0,n);
    }
};
