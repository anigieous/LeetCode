/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(!head || !head->next){
            return head;
        }
        ListNode* prev = nullptr;
        ListNode* res = new ListNode(0);
        ListNode* tmp = res;
        while(head){
            if(head->next && head->val == head->next->val){
                while(head->next && head->val == head->next->val){
                    head = head->next;
                }
                head = head->next;
            }else{
                ListNode* t = new ListNode(head->val);
                tmp->next = t;
                tmp = tmp->next;
                head = head->next;
            }
        }
        return res->next;
    }
};
