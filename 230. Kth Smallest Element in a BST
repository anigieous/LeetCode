/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int kthSmallest(TreeNode* root, int k) {
        if (!root) return -1;
        vector <int> st;
        helper (root, st, k);
        return st[k-1];
    }
    void helper (TreeNode* root, vector <int>& st, int k) {
        if (!root || st.size()==k) return;
    
        helper (root->left, st, k);
        st.push_back(root->val);
        helper (root->right, st, k);
    }
};
