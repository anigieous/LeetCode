/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void helper(TreeNode *root, vector<int> &res){
        if(!root){
            return;
        }
        helper(root->left, res);
        res.push_back(root->val);
        helper(root->right, res);
        return;
    }
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> res;
        helper(root, res);
        return res;
    }
    bool findTarget(TreeNode* root, int k) {
        vector<int> res = inorderTraversal(root);
        sort(res.begin(),res.end());
        int i=0, j=res.size()-1;
        while(i < j){
            if(res[i]+res[j] == k){
                return true;
            }else if(res[i]+res[j] < k){
                i++;
            }else{
                j--;
            }
        }
        return false;
    }
};
