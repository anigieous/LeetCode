/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* Insert(TreeNode* root, int value){
    if (!root)
    {
        return new TreeNode(value);
    }
    if (value > root->val)
    {
        root->right = Insert(root->right, value);
    }
    else
    {
        root->left = Insert(root->left, value);
    }
    return root;
    }
 
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        TreeNode* root = new TreeNode(preorder[0]);
        for(int i =1;i<preorder.size();i++){
            if(root-> val > preorder[i])
                root->left = Insert(root->left, preorder[i]);
            else
                root->right = Insert(root->right, preorder[i]);
        }
        return root;
    }
};
