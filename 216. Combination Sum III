class Solution {
public:
    vector<vector<int>> res;
    void recursive(vector<int> &nums, int target, int index, vector<int> resSoFar, int k){
        if( target < 0 || resSoFar.size() > k) return;
        if(target == 0 && resSoFar.size() == k) {
            res.push_back(resSoFar);
            return;
        }
        for(int i = index;i<nums.size();i++){
            resSoFar.push_back(nums[i]);
            recursive(nums, target-nums[i], i+1, resSoFar, k);
            resSoFar.pop_back();
        }
    }
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<int> tmp;
        vector<int> nums = {1,2,3,4,5,6,7,8,9};
        recursive(nums, n, 0, tmp,k);
        return res;
    }
};
