class Solution {
public:
    int recursive(vector<int> &nums, int target, int index, vector<int > &dp){
        if( target < 0) return 0;
        if(target == 0) { 
            return 1;
        }
        if(dp[target] != -1){
            return dp[target];
        }
        int res =0;
        for(int i = index;i<nums.size();i++){
            res += recursive(nums, target-nums[i], 0, dp);
        }
        return dp[target] = res;
    }
    int combinationSum4(vector<int>& nums, int target) {
        vector<int> dp(target+1,-1);        
        return recursive(nums, target, 0,dp);
    }
};
